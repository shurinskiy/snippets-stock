$basesize: 16; 
$image_path: "images/"; 

$light: #eee;
$lightgrey: #bbb;
$grey: #888;
$darkgrey: #444;
$dark: #222;
$orange: #f9a200;

/*подключить шрифт*/ 
@mixin font-face($file, $family, $folder: "fonts/") { 
	@font-face { 
		font-family: $family; 
		src: url("#{$folder}#{$file}/#{$file}.eot?#iefix") format('embedded-opentype'), 
			url("#{$folder}#{$file}/#{$file}.woff") format('woff'), 
			url("#{$folder}#{$file}/#{$file}.ttf")  format('truetype'), 
			url("#{$folder}#{$file}.svg##{$file}") format('svg'); 
		font-weight: normal; 
		font-style: normal; 
	} 
} 
  	
/*вставить символ псевдографики*/ 
@mixin inssymbol( $font,$symbol: '\0000',$pseudo: "after") { 
	&:#{$pseudo} { 
		content: "#{$symbol}"; 
		font-family: $font; 
		vertical-align: middle; 
		@content; 
	} 
} 
  	
/*заполнить родительский блок*/ 
@mixin fill($spacing: 0, $index: 0) { 
	position: absolute; 
	display: block; 
	box-sizing: border-box; 
	top: $spacing; bottom: $spacing; 
	left: $spacing; right: $spacing; 
	z-index: $index; 
} 
  	
/*сохранять пропрорции*/ 
@mixin aspect-ratio($w, $h) { 
	display: block; 
	position: relative; 
	$ratio: ($h / $w); 
	&:before { 
		content: ''; 
		display: block; 
		padding-top: (100% * $ratio); 
	} 
	> * { @include fill(); } 
} 

/*replacing SVG strings in data-uri style situations*/

// Function to replace characters in a string
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);
	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
		str-replace(str-slice($string, $index +
		str-length($search)), $search, $replace);
	}
	@return $string;
}

/* оптимизировать url-адреса для svg */
@function svg-url($svg) {
	$encoded:'';
	$slice: 2000;
	$index: 0;
	$loops: ceil(str-length($svg)/$slice);
	@for $i from 1 through $loops {
		$chunk: str-slice($svg, $index, $index + $slice - 1);
		$chunk: str-replace($chunk,'"','\'');
		$chunk: str-replace($chunk,'<','%3C');
		$chunk: str-replace($chunk,'>','%3E');
		$chunk: str-replace($chunk,'&','%26');
		$chunk: str-replace($chunk,'#','%23');
		$chunk: str-replace($chunk,'{','%7B');
		$chunk: str-replace($chunk,'}','%7D');
		$encoded: #{$encoded}#{$chunk};
		$index: $index + $slice;
	}
	@return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

/* спрятать элемент */
@mixin hide {
	display: none;
	appearance: none;
	border: none;
	margin: 0;
	padding: 0;
	height: 1px;
	position: absolute;
	top: -9999px;
	left: -9999px;
}

@mixin outline($color: grey) { 
	outline: 1px dotted $color; 
} 
