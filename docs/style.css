@charset "UTF-8";
/*подключить шрифт*/
/*вставить символ псевдографики*/
/*заполнить родительский блок*/
/*сохранять пропрорции*/
/*replacing SVG strings in data-uri style situations*/
/* оптимизировать url-адреса для svg */
/* спрятать элемент */
body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

fieldset, img, abbr {
  border: 0; }

address, caption, cite, code, dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal; }

ul li {
  list-style: none; }

caption, th {
  text-align: left; }

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal; }

sup {
  vertical-align: text-top; }

sub {
  vertical-align: text-bottom; }

input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit; }

legend {
  color: #000; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
  display: block; }

img {
  max-width: 100%;
  height: auto; }

.checkbox > span::before {
  content: "";
  display: inline-block;
  width: 18px;
  height: 18px;
  background-color: #fff;
  border: 2px solid #aaa;
  border-radius: 3px;
  vertical-align: sub;
  margin-right: 5px; }

.checkbox > input {
  display: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  margin: 0;
  padding: 0;
  height: 1px;
  position: absolute;
  top: -9999px;
  left: -9999px; }
  .checkbox > input:checked + span::before {
    background: transparent url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14.301' height='11.482' viewBox='0 0 14.301 11.482'%3E%3Cpath id='Path_2' data-name='Path 2' d='M2245.533,928.814l4.3,6.1,8.446-9.215' transform='translate(-2244.715 -925.027)' fill='none' stroke='%23999' stroke-width='2'/%3E%3C/svg%3E") no-repeat center; }

.decor {
  max-width: 300px; }
  .decor_postmark {
    transform: rotate(-3deg);
    position: relative;
    box-sizing: border-box;
    display: block;
    background-color: #eee;
    border: 10px solid white;
    box-shadow: -2px 2px 10px 5px rgba(0, 0, 0, 0.2); }
    .decor_postmark::before {
      content: '';
      position: absolute;
      left: -16px;
      top: -16px;
      right: -16px;
      bottom: -16px;
      z-index: 1;
      border: 12px solid white;
      -o-border-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Cpath d='M60,37V60H37a8,8,0,0,0-16,0H0V37a8,8,0,0,0,8-8,8,8,0,0,0-8-8V0H21a8,8,0,0,0,8,8,8,8,0,0,0,8-8H60V21a8,8,0,0,0,0,16Z' fill='%23fff' fill-rule='evenodd'/%3E%3C/svg%3E") 18 round;
      border-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Cpath d='M60,37V60H37a8,8,0,0,0-16,0H0V37a8,8,0,0,0,8-8,8,8,0,0,0-8-8V0H21a8,8,0,0,0,8,8,8,8,0,0,0,8-8H60V21a8,8,0,0,0,0,16Z' fill='%23fff' fill-rule='evenodd'/%3E%3C/svg%3E") 18 round; }
  .decor_shadow, .decor_shadow-right {
    position: relative;
    box-sizing: border-box;
    display: block;
    background-color: #fff;
    padding: 12px;
    border: 1px solid #e2e2e2; }
    .decor_shadow::after, .decor_shadow-right::after {
      content: "";
      display: block;
      height: 15px;
      position: absolute;
      bottom: -15px;
      left: 0;
      right: 0;
      background: url(images/shadows.png) left bottom no-repeat; }
  .decor_shadow-right::after {
    background-position: right top; }
  .decor img {
    display: block;
    margin: auto; }

.form-1__checkbox, .form-1__radio {
  margin-right: 10px;
  cursor: pointer; }
  .form-1__checkbox > span::before, .form-1__radio > span::before {
    content: "";
    display: inline-block;
    box-sizing: border-box;
    width: 22px;
    height: 22px;
    background-color: #fff;
    border: 2px solid #ccc;
    border-radius: 3px;
    vertical-align: middle;
    margin-right: 5px; }
  .form-1__checkbox > input, .form-1__radio > input {
    display: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border: none;
    margin: 0;
    padding: 0;
    height: 1px;
    position: absolute;
    top: -9999px;
    left: -9999px; }
    .form-1__checkbox > input:checked + span::before, .form-1__radio > input:checked + span::before {
      background: transparent url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14.301' height='11.482' viewBox='0 0 14.301 11.482'%3E%3Cpath id='Path_2' data-name='Path 2' d='M2245.533,928.814l4.3,6.1,8.446-9.215' transform='translate(-2244.715 -925.027)' fill='none' stroke='%23aaa' stroke-width='3'/%3E%3C/svg%3E") no-repeat center; }

.form-1__radio > span::before {
  width: 23px;
  height: 23px;
  border-radius: 100px; }

.form-1__radio > input:checked + span::before {
  background: transparent url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='11' height='11' viewBox='0 0 11 11'%3E%3Cpath d='M5.5,0A5.5,5.5,0,1,1,0,5.5,5.5,5.5,0,0,1,5.5,0Z' fill='%23aaa'/%3E%3C/svg%3E") no-repeat center; }

.form-1__switch > span {
  cursor: pointer;
  display: inline-block;
  background: transparent url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='35' height='23' viewBox='0 0 35 23'%3E%3Crect width='35' height='23' rx='11.5' fill='%23ccc'/%3E%3C/svg%3E") no-repeat left; }
  .form-1__switch > span::before {
    content: "";
    display: inline-block;
    box-sizing: border-box;
    width: 19px;
    height: 19px;
    background-color: #fff;
    border-radius: 100px;
    vertical-align: middle;
    margin: 2px 20px 2px 2px;
    box-shadow: -1px 1px 1px #888; }

.form-1__switch > input {
  display: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  margin: 0;
  padding: 0;
  height: 1px;
  position: absolute;
  top: -9999px;
  left: -9999px; }
  .form-1__switch > input:checked + span {
    background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='35' height='23' viewBox='0 0 35 23'%3E%3Crect width='35' height='23' rx='11.5' fill='%23aaa'/%3E%3C/svg%3E"); }
  .form-1__switch > input:checked + span::before {
    margin: 2px 8px 2px 14px; }

.gallery-1__items {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  margin: 0 -10px; }

.gallery-1__item {
  flex: 0 1 auto;
  width: calc(99.9% / 4 - 20px);
  box-sizing: border-box;
  margin: 0 10px 20px 10px;
  background-color: #fff;
  border: 1px solid #eee; }
  @media screen and (max-width: 960px) {
    .gallery-1__item {
      width: calc(99.9% / 3 - 20px); } }
  @media screen and (max-width: 780px) {
    .gallery-1__item {
      width: calc(99.9% / 2 - 20px); } }
  @media screen and (max-width: 360px) {
    .gallery-1__item {
      width: calc(99.9% / 1 - 20px); } }
  .gallery-1__item img {
    display: block;
    box-sizing: border-box;
    width: 90%;
    margin: 5%; }

.navi-1 {
  display: flex;
  background-color: #eee; }
  .navi-1__menu {
    display: flex; }
    @media screen and (max-width: 780px) {
      .navi-1__menu {
        display: none; } }
  .navi-1__menu-item {
    position: relative; }
    .navi-1__menu-item:hover > *, .navi-1__menu-item.hover > * {
      display: block; }
    .navi-1__menu-item > a {
      display: block;
      padding: 20px 40px; }
  .navi-1__submenu {
    display: none;
    position: absolute;
    z-index: 1;
    top: calc(50% + 1.0em);
    left: 40px;
    background-color: #e1e1e1; }
    .navi-1__submenu .navi-1__submenu {
      background-color: #d5d5d5; }
  .navi-1__submenu-item {
    position: relative; }
    .navi-1__submenu-item:hover > *, .navi-1__submenu-item.hover > * {
      display: block; }
    .navi-1__submenu-item > a {
      display: block;
      padding: 10px 20px; }
  .navi-1__menu-open {
    display: none;
    min-height: 60px;
    width: 24px;
    margin: auto 40px auto auto;
    cursor: pointer;
    background: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='17' viewBox='0 0 24 17'%3E%3Cdefs%3E%3Cstyle%3E.cls-1 %7Bfill:%23aaa;fill-rule:evenodd;%7D%3C/style%3E%3C/defs%3E%3Cpath id='rect_1' data-name='rect 1' class='cls-1' d='M0,0H24V3H0V0ZM0,14H24v3H0V14ZM0,7H24v3H0V7Z'/%3E%3C/svg%3E") center center no-repeat transparent; }
    @media screen and (max-width: 780px) {
      .navi-1__menu-open {
        display: block; } }
  .navi-1__menu-close {
    display: none;
    position: absolute;
    z-index: 9999;
    height: 50px;
    width: 50px;
    cursor: pointer;
    top: 30px;
    right: 30px;
    background: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3Cstyle%3E.cls-1 %7Bfill:%23ddd; fill-rule:evenodd;%7D%3C/style%3E%3C/defs%3E%3Cpath id='1' data-name='1' class='cls-1' d='M3.928,23.994L0,20.07,8.075,12,0,3.928,3.928,0,12,8.075,20.072,0,24,3.928,15.925,12l8.07,8.068L20.07,23.992,12,15.923Z'/%3E%3C/svg%3E") center center no-repeat transparent; }
  .navi-1 .navi-1__toggle {
    display: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border: none;
    margin: 0;
    padding: 0;
    height: 1px;
    position: absolute;
    top: -9999px;
    left: -9999px; }
    .navi-1 .navi-1__toggle:checked ~ .navi-1__menu {
      display: block;
      position: absolute;
      z-index: 9998;
      box-sizing: border-box;
      font-size: 1.4rem;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      height: 100vh;
      background-color: rgba(0, 0, 0, 0.8);
      padding-left: 30%;
      padding-top: 10vh;
      overflow: auto; }
      .navi-1 .navi-1__toggle:checked ~ .navi-1__menu .navi-1__menu-item > a {
        padding-left: 10px; }
      .navi-1 .navi-1__toggle:checked ~ .navi-1__menu .navi-1__submenu {
        position: static;
        background-color: transparent;
        margin-left: 10%;
        border-left: 1px solid #888; }
      .navi-1 .navi-1__toggle:checked ~ .navi-1__menu .navi-1__submenu-item > a {
        font-size: 1rem; }
    .navi-1 .navi-1__toggle:checked ~ .navi-1__menu-close {
      display: block; }

.navi-2__menu {
  background-color: #bbb;
  display: flex; }

.navi-2__menu-item {
  display: block;
  padding: 10px 20px;
  color: #fff; }

.navi-2_fixed {
  padding-top: 42px; }
  .navi-2_fixed .navi-2__menu {
    position: fixed;
    z-index: 1000;
    top: 0;
    width: 100%; }

.section {
  padding: 50px 0; }
  .section:first-of-type {
    padding-top: 0; }
  .section_grey {
    background-color: #f2f2f2; }
  .section__container {
    max-width: 1400px;
    margin: 0 auto;
    padding-left: 20px;
    padding-right: 20px; }
  .section__items {
    display: flex;
    flex-wrap: wrap;
    margin-left: -20px;
    margin-right: -20px;
    justify-content: center; }
  .section__item {
    margin-bottom: 40px;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 20px;
    margin-right: 20px;
    width: calc(33.33333% - 40px); }
    @media screen and (max-width: 960px) {
      .section__item {
        width: calc(50% - 40px); } }
    @media screen and (max-width: 640px) {
      .section__item {
        width: calc(83.33333% - 40px); } }
    @media screen and (max-width: 480px) {
      .section__item {
        width: calc(100% - 40px); } }
    @media screen and (max-width: 960px) {
      .section__item:last-of-type {
        display: none; } }
    @media screen and (max-width: 640px) {
      .section__item:last-of-type {
        display: block; } }
  .section__description {
    width: 50%;
    margin-right: 0;
    color: #444;
    font-size: 0.8rem;
    line-height: 1rem;
    padding: 20px 20px 20px 50px;
    margin: 20px 20px 0px auto;
    background: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24.823' height='22.958' viewBox='0 0 24.823 22.958'%3E%3Cpath id='Path_1' data-name='Path 1' d='M5.838,10.662A13.945,13.945,0,0,1,4.427,16.9a7.475,7.475,0,0,1-3.85,3.324l2.1,3.4A13.056,13.056,0,0,0,9.09,17.788q1.482-2.821,1.483-9.231V.666H1.342v10Zm14.827,0A13.945,13.945,0,0,1,19.254,16.9a7.475,7.475,0,0,1-3.85,3.324l2.1,3.4a13.056,13.056,0,0,0,6.409-5.835Q25.4,14.967,25.4,8.557V.666H16.169v10Z' transform='translate(-0.577 -0.666)' fill='%23ccc' fill-rule='evenodd'/%3E%3C/svg%3E") 12px 12px no-repeat #fff1c5;
    background-size: 28px 28px; }

.title_vertical {
  padding-left: 50px !important;
  position: relative; }
  @media screen and (max-width: 480px) {
    .title_vertical {
      padding-left: 25px !important; } }
  .title_vertical::before {
    display: block;
    content: attr(data-title);
    transform: translate(-100%) rotate(-90deg);
    transform-origin: right top;
    position: absolute;
    top: 0;
    left: 0;
    color: #888;
    font-family: sans-serif;
    font-size: 2.0rem;
    font-weight: bold;
    line-height: 2.2rem;
    text-transform: uppercase; }
  .title_vertical::after {
    content: '';
    display: block;
    border-left: 1px solid #aaa;
    position: absolute;
    top: 0;
    left: 2.2rem;
    bottom: 0; }

body,
html {
  font-size: 16px;
  line-height: calc(16px * 1.4);
  font-family: sans-serif;
  background-color: #fafafa;
  min-height: 100vh;
  display: flex;
  flex-flow: column nowrap; }
  @media screen and (max-width: 480px) {
    body,
    html {
      font-size: calc(16px * 0.85);
      line-height: calc(16px * 1.2); } }

.footer {
  flex: 0 0 auto;
  margin-top: auto; }

a {
  color: #888; }

p {
  margin-bottom: 10px; }

strong {
  font-weight: bold; }

em {
  font-style: italic; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
